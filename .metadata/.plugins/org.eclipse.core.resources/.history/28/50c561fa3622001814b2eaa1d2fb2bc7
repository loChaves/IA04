import java.io.IOException;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import jade.core.Agent;
import jade.core.behaviours.CyclicBehaviour;
import jade.lang.acl.ACLMessage;

public class FactMult extends Agent {
	protected void setup(){
		System.out.println(getName() + "--> Installed");

		Object[] args = getArguments();
		String op = (String) args[0];
		addBehaviour(new MultBehaviour());
	}

	//Effectue un produit
	public class MultBehaviour extends CyclicBehaviour{
		ObjectMapper mapper = new ObjectMapper();
		
		public void action(){
			ACLMessage message = receive();
			
			if (message != null) {
				String par = message.getContent();
				ACLMessage reply = message.createReply();
				
				Operation op;
				try {
					op = mapper.readValue(message.getContent(), Operation.class);
					if (op.getOperation() == "Multiplication") {
						double n = op.getArg1() * op.getArg2();
						reply.setPerformative(ACLMessage.INFORM);
						reply.setContent(String.valueOf(n));
					}
					else {
						reply.setPerformative(ACLMessage.FAILURE);
						System.out.println(getName() + " : Error! Unknown operator. " + op.getOperation());
						reply.setContent("Unknown operator!");
					}
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
					System.out.println(getName() + " : Error! Wrong message received.");
					reply.setPerformative(ACLMessage.FAILURE);
					reply.setContent("Error in the reception!");
				}
				
				send(reply);
			}
			else{
				block();
			}
		}
	}
}
