import jade.core.AID;
import jade.core.Agent;
import jade.core.behaviours.CyclicBehaviour;
import jade.core.behaviours.OneShotBehaviour;
import jade.lang.acl.ACLMessage;

public class FactAgent extends Agent {
	protected void setup() {
		System.out.println(getName() + "--> Installed");

		addBehaviour(new FactBehaviour());
	}
	
	//Organise le calcul d’une factorielle
	public class FactBehaviour extends CyclicBehaviour {
		public void action(){
			ACLMessage message = receive();
			if(message != null){
				System.out.println(getName() + " : " + message.getPerformative() + " == " + ACLMessage.INFORM);
				
				String par = message.getContent();
				
				if (par.contains("!")) {
					String[] parameters = par.split("!");
					int n = Integer.parseInt(parameters[0].trim());
					long ans = 1;
					
					ACLMessage rqtFact = new ACLMessage(ACLMessage.REQUEST);
					rqtFact.addReceiver(new AID("MULT", AID.ISLOCALNAME));
					
					if(n > 1){
						String msg = String.valueOf(n) + " x " + String.valueOf(n-1);
						System.out.println(getName() + " : " + msg);
						rqtFact.setContent(msg);
						n = n-2;
						send(rqtFact);
						
						//ans = ;
						
						/*while(n > 1){
							
							rqtFact.setContent();
							send(rqtFact);
							
							n--;
						}*/
						System.out.println(getName() + " : Factorial = " + ans);
					}
				}
				else {
					System.out.println(getName() + " : Error! Unkwon request.");
					block();
				}
			}
			else{
				block();
			}
		}
	}
}